image: docker:latest

services:
  - docker:dind

stages:
  - build
  - test

before_script:
  - cp -R src src_copy

variables:
  PYTHONPATH: $PYTHONPATH:$(pwd)/src_copy/scenarios/tools:$(pwd)/src_copy/utils/:$(pwd)/src_copy/isolate/

build:
  stage: build
  rules:
    - if: '$CI_PIPELINE_SOURCE != $CI_PIPELINE_SOURCE'
  script:
    - docker build -t registry.gitlab.com/projet-long/autotester2/my-custom-image:latest .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push registry.gitlab.com/projet-long/autotester2/my-custom-image:latest


test:
  image : registry.gitlab.com/projet-long/autotester2/my-custom-image:latest
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
  script:
    - apk --update add jq
    - TRIGGER_INFO=$(echo "$CI_PIPELINE_TRIGGERED" | jq -r '.trigger' )
    - TRIGGER_PROJECT=$(echo "$TRIGGER_INFO" | jq -r '.project' )
    - TRIGGER_PIPELINE_ID=$(echo "$TRIGGER_INFO" | jq -r '.id' )
    - echo "Triggered by pipeline $TRIGGER_PIPELINE_ID in project $TRIGGER_PROJECT"
    - export PYTHONPATH=$PYTHONPATH:./src_copy/utils
    - export PYTHONPATH=$PYTHONPATH:./src_copy/utils:./src_copy/scenarios/results
    - export PYTHONPATH=$PYTHONPATH:./src_copy/isolate
    - export PYTHONPATH=$PYTHONPATH:./src_copy/main
    - javac HelloWorld.java
    - sh feat3p evaluate --commit tob projet-court khammi evaluations/retour5 compilationjava 
